{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/risk-score-history/RiskScoreHistory.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, VStack, Text, Spinner, Alert, AlertIcon } from '@chakra-ui/react'\nimport ReactECharts from 'echarts-for-react'\nimport { fetchRiskScoreHistory, selectRiskScoreHistory } from './riskScoreHistorySlice'\nimport { selectESGCategories } from '../esg-categories/esgCategoriesSlice'\nimport { AppDispatch } from '../../store'\n\nconst RiskScoreHistory = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { data, loading, error } = useSelector(selectRiskScoreHistory)\n  const { data: esgCategories } = useSelector(selectESGCategories)\n\n  useEffect(() => {\n    dispatch(fetchRiskScoreHistory())\n  }, [dispatch])\n\n  if (loading) {\n    return (\n      <Box p={4} textAlign=\"center\">\n        <Spinner />\n      </Box>\n    )\n  }\n\n  if (error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert>\n    )\n  }\n\n  if (!data?.data || data.data.length === 0) {\n    return (\n      <Box p={4}>\n        <Text>No risk score history found</Text>\n      </Box>\n    )\n  }\n\n  const getCategoryColor = (categoryId: string) => {\n    const category = esgCategories?.categories.find(\n      (cat) => cat.id.toLowerCase() === categoryId.toLowerCase()\n    )\n    return category?.color || '#9C27B0' // default to governance color if not found\n  }\n\n  const option = {\n    tooltip: {\n      trigger: 'axis',\n      formatter: (params: any) => {\n        const date = params[0].name\n        const scores = params.map((param: any) => `${param.seriesName}: ${param.value}`).join('<br/>')\n        return `${date}<br/>${scores}`\n      }\n    },\n    grid: {\n      left: '0%',\n      right: '0%',\n      bottom: '3%',\n      top: '3%',\n      containLabel: true\n    },\n    xAxis: {\n      type: 'category',\n      data: data.data.map(item => item.date),\n      axisLabel: {\n        formatter: (value: string) => {\n          return new Date(value).toLocaleDateString()\n        }\n      }\n    },\n    yAxis: {\n      type: 'value',\n      name: 'Risk Score',\n      scale: true,\n      splitNumber: 2\n    },\n    series: [\n      {\n        name: 'Overall',\n        type: 'line',\n        data: data.data.map(item => item.overall),\n        smooth: true,\n        lineStyle: {\n          width: 3\n        },\n        itemStyle: {\n          color: '#FF9800'\n        },\n        areaStyle: {\n          color: {\n            type: 'linear',\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [{\n              offset: 0,\n              color: 'rgba(255, 152, 0, 0.3)'\n            }, {\n              offset: 1,\n              color: 'rgba(255, 152, 0, 0.1)'\n            }]\n          }\n        }\n      },\n      {\n        name: 'Environmental',\n        type: 'line',\n        data: data.data.map(item => item.environmental),\n        smooth: true,\n        lineStyle: {\n          width: 1\n        },\n        itemStyle: {\n          color: getCategoryColor('environmental')\n        }\n      },\n      {\n        name: 'Social',\n        type: 'line',\n        data: data.data.map(item => item.social),\n        smooth: true,\n        lineStyle: {\n          width: 1\n        },\n        itemStyle: {\n          color: getCategoryColor('social')\n        }\n      },\n      {\n        name: 'Governance',\n        type: 'line',\n        data: data.data.map(item => item.governance),\n        smooth: true,\n        lineStyle: {\n          width: 1\n        },\n        itemStyle: {\n          color: getCategoryColor('governance')\n        }\n      }\n    ]\n  }\n\n  return (\n    <Box>\n      <VStack spacing={4} align=\"stretch\">\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\n          Risk Score History (Interval: {data.interval})\n        </Text>\n\n        <ReactECharts option={option} style={{ height: '200px' }} />\n      </VStack>\n    </Box>\n  )\n}\n\nexport default RiskScoreHistory "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/incidents/Incidents.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { \n  Box, \n  Text, \n  Badge, \n  HStack, \n  Spinner, \n  Alert, \n  AlertIcon, \n  Tooltip, \n  VStack, \n  Flex,\n  Select,\n  SimpleGrid,\n  FormControl,\n  FormLabel,\n  Button\n} from '@chakra-ui/react'\nimport { fetchIncidents, selectIncidents } from './incidentsSlice'\nimport { selectSeverityLevels } from '../severity-levels/severityLevelsSlice'\nimport { selectESGCategories } from '../esg-categories/esgCategoriesSlice'\nimport { AppDispatch } from '../../store'\nimport type { ESGCategory } from '../esg-categories/esgCategoriesSlice'\nimport DatePicker from 'react-datepicker'\nimport \"react-datepicker/dist/react-datepicker.css\"\n\nconst Incidents = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { data: incidentsData, loading: incidentsLoading, error: incidentsError } = useSelector(selectIncidents)\n  const { data: severityLevelsData } = useSelector(selectSeverityLevels)\n  const { data: esgCategoriesData } = useSelector(selectESGCategories)\n\n  // 筛选状态\n  const [startDate, setStartDate] = useState<Date | null>(null)\n  const [endDate, setEndDate] = useState<Date | null>(null)\n  const [selectedSeverity, setSelectedSeverity] = useState<string>('')\n  const [selectedCategory, setSelectedCategory] = useState<string>('')\n\n  useEffect(() => {\n    dispatch(fetchIncidents())\n  }, [dispatch])\n\n  if (incidentsLoading) {\n    return (\n      <Box p={4} textAlign=\"center\">\n        <Spinner />\n      </Box>\n    )\n  }\n\n  if (incidentsError) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        {incidentsError}\n      </Alert>\n    )\n  }\n\n  if (!incidentsData?.incidents || incidentsData.incidents.length === 0) {\n    return (\n      <Box p={4}>\n        <Text>No incidents found</Text>\n      </Box>\n    )\n  }\n\n  const getSeverityColor = (severity: string) => {\n    const level = severityLevelsData?.severityLevels.find(\n      level => level.id.toLowerCase() === severity.toLowerCase()\n    )\n    return level?.color || '#FBC02D'\n  }\n\n  const getCategoryColor = (category: string) => {\n    const esgCategory = esgCategoriesData?.categories.find(\n      (cat: ESGCategory) => cat.id.toLowerCase() === category.toLowerCase()\n    )\n    return esgCategory?.color || '#9C27B0'\n  }\n\n  const getCategoryName = (categoryId: string) => {\n    const esgCategory = esgCategoriesData?.categories.find(\n      (cat: ESGCategory) => cat.id.toLowerCase() === categoryId.toLowerCase()\n    )\n    return esgCategory?.name || categoryId\n  }\n\n  const getSubcategoryName = (categoryId: string, subcategoryId: string) => {\n    const esgCategory = esgCategoriesData?.categories.find(\n      (cat: ESGCategory) => cat.id.toLowerCase() === categoryId.toLowerCase()\n    )\n    const subcategory = esgCategory?.subcategories.find(\n      (sub) => sub.id.toLowerCase() === subcategoryId.toLowerCase()\n    )\n    return subcategory?.name || subcategoryId\n  }\n\n  const resetFilters = () => {\n    setStartDate(null)\n    setEndDate(null)\n    setSelectedSeverity('')\n    setSelectedCategory('')\n  }\n\n  // 应用筛选条件\n  const filteredIncidents = incidentsData.incidents\n    .filter(incident => {\n      if (startDate && new Date(incident.date) < startDate) return false\n      if (endDate && new Date(incident.date) > endDate) return false\n      if (selectedSeverity && incident.severity.toLowerCase() !== selectedSeverity.toLowerCase()) return false\n      if (selectedCategory && incident.category.toLowerCase() !== selectedCategory.toLowerCase()) return false\n      return true\n    })\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n\n  return (\n    <Box>\n      <Text fontSize=\"lg\" fontWeight=\"bold\" mb={4}>\n        Recent Incidents ({filteredIncidents.length})\n      </Text>\n\n      {/* 筛选器 */}\n      <Box p={4} borderWidth=\"1px\" borderRadius=\"lg\" mb={4}>\n        <SimpleGrid columns={{ base: 1, md: 2, lg: 4 }} spacing={4}>\n          <FormControl>\n            <FormLabel>Start Date</FormLabel>\n            <DatePicker\n              selected={startDate}\n              onChange={(date: Date | null) => setStartDate(date)}\n              dateFormat=\"yyyy-MM-dd\"\n              placeholderText=\"Select start date\"\n              className=\"chakra-input\"\n            />\n          </FormControl>\n          <FormControl>\n            <FormLabel>End Date</FormLabel>\n            <DatePicker\n              selected={endDate}\n              onChange={(date: Date | null) => setEndDate(date)}\n              dateFormat=\"yyyy-MM-dd\"\n              placeholderText=\"Select end date\"\n              className=\"chakra-input\"\n            />\n          </FormControl>\n          <FormControl>\n            <FormLabel>Severity</FormLabel>\n            <Select\n              value={selectedSeverity}\n              onChange={(e) => setSelectedSeverity(e.target.value)}\n              placeholder=\"Select severity\"\n            >\n              {severityLevelsData?.severityLevels.map((level) => (\n                <option key={level.id} value={level.id}>\n                  {level.name}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n          <FormControl>\n            <FormLabel>Category</FormLabel>\n            <Select\n              value={selectedCategory}\n              onChange={(e) => setSelectedCategory(e.target.value)}\n              placeholder=\"Select category\"\n            >\n              {esgCategoriesData?.categories.map((category) => (\n                <option key={category.id} value={category.id}>\n                  {category.name}\n                </option>\n              ))}\n            </Select>\n          </FormControl>\n        </SimpleGrid>\n        <Button mt={4} onClick={resetFilters} colorScheme=\"blue\">\n          Reset Filters\n        </Button>\n      </Box>\n\n      <Box\n        position=\"relative\"\n        minH=\"300px\"\n        overflowX=\"auto\"\n        css={{\n          '&::-webkit-scrollbar': {\n            height: '8px',\n          },\n          '&::-webkit-scrollbar-track': {\n            background: '#f1f1f1',\n            borderRadius: '4px',\n          },\n          '&::-webkit-scrollbar-thumb': {\n            background: '#888',\n            borderRadius: '4px',\n          },\n          '&::-webkit-scrollbar-thumb:hover': {\n            background: '#555',\n          },\n        }}\n      >\n        <Box position=\"relative\">\n          {/* Timeline axis */}\n          <Box\n            position=\"absolute\"\n            top=\"50%\"\n            left=\"0\"\n            right=\"0\"\n            height=\"2px\"\n            bg=\"gray.200\"\n            transform=\"translateY(-50%)\"\n          />\n          \n          <HStack spacing={8} align=\"center\" minH=\"350px\" p={4} overflowX=\"auto\">\n            {filteredIncidents.map((incident, index) => (\n              <Flex\n                key={incident.id}\n                direction=\"column\"\n                align=\"center\"\n                position=\"relative\"\n                minW=\"200px\"\n              >\n                {/* Timeline dot */}\n                <Box\n                  position=\"absolute\"\n                  top=\"50%\"\n                  left=\"50%\"\n                  transform=\"translate(-50%, -50%)\"\n                  width=\"12px\"\n                  height=\"12px\"\n                  borderRadius=\"full\"\n                  bg={getSeverityColor(incident.severity)}\n                  zIndex={1}\n                />\n                \n                {/* Date marker */}\n                <Box\n                  position=\"absolute\"\n                  top=\"50%\"\n                  left=\"50%\"\n                  transform=\"translate(-50%, -50%)\"\n                  mt={index % 2 === 0 ? \"30px\" : \"-30px\"}\n                  fontSize=\"sm\"\n                  color=\"gray.500\"\n                  whiteSpace=\"nowrap\"\n                >\n                  {new Date(incident.date).toLocaleDateString()}\n                </Box>\n\n                <Tooltip\n                  label={\n                    <VStack align=\"start\" spacing={1}>\n                      <Text fontWeight=\"bold\">{incident.title}</Text>\n                      <Text>Date: {new Date(incident.date).toLocaleDateString()}</Text>\n                      <Text>Category: {getCategoryName(incident.category)} - {getSubcategoryName(incident.category, incident.subcategory)}</Text>\n                      <Text>Severity: {incident.severity}</Text>\n                      <Text>Location: {incident.location}</Text>\n                      <Text>Description: {incident.description}</Text>\n                      <Text>Risk Score Impact: {incident.riskScoreImpact.overall}</Text>\n                    </VStack>\n                  }\n                  placement={index % 2 === 0 ? 'top' : 'bottom'}\n                  hasArrow\n                >\n                  <Box\n                    width=\"100%\"\n                    minWidth=\"200px\"\n                    p={4}\n                    borderWidth=\"1px\"\n                    borderRadius=\"lg\"\n                    borderColor={getCategoryColor(incident.category)}\n                    borderLeftWidth=\"4px\"\n                    cursor=\"pointer\"\n                    _hover={{ transform: 'scale(1.02)', transition: 'transform 0.2s' }}\n                    bg=\"white\"\n                    position=\"absolute\"\n                    top={index % 2 === 0 ? \"auto\" : \"20px\"}\n                    bottom={index % 2 === 0 ? \"20px\" : \"auto\"}\n                  >\n                    <VStack align=\"start\" spacing={2}>\n                      <Text fontWeight=\"bold\" noOfLines={2}>\n                        {incident.title}\n                      </Text>\n                      <Text fontSize=\"sm\" noOfLines={1}>\n                        {getCategoryName(incident.category)} - {getSubcategoryName(incident.category, incident.subcategory)}\n                      </Text>\n                      <Badge\n                        bg={getSeverityColor(incident.severity)}\n                        color=\"white\"\n                      >\n                        {incident.severity}\n                      </Badge>\n                    </VStack>\n                  </Box>\n                </Tooltip>\n              </Flex>\n            ))}\n          </HStack>\n        </Box>\n      </Box>\n    </Box>\n  )\n}\n\nexport default Incidents "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 837, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/lib/company-risk-overview.ts"],"sourcesContent":["import type { CompanyRiskOverview } from '@/types/company-risk-overview'\n\nconst API_BASE_URL = process.env.NODE_ENV === 'development' \n  ? 'http://localhost:3000/api'\n  : process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000/api'\n\nexport async function fetchCompanyRiskOverview(companyId: string = 'demo-company-123'): Promise<CompanyRiskOverview> {\n  try {\n    const response = await fetch(`${API_BASE_URL}/company-risk-overview?companyId=${companyId}`)\n    if (!response.ok) {\n      throw new Error('Failed to fetch company risk overview')\n    }\n    return response.json()\n  } catch (error) {\n    throw new Error(error instanceof Error ? error.message : 'Failed to fetch company risk overview data')\n  }\n} "],"names":[],"mappings":";;;AAEqB;AAArB,MAAM,eAAe,uCACjB;AAGG,eAAe,yBAAyB,YAAoB,kBAAkB;IACnF,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,GAAG,aAAa,iCAAiC,EAAE,WAAW;QAC3F,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM;QAClB;QACA,OAAO,SAAS,IAAI;IACtB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,MAAM,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAC3D;AACF","debugId":null}},
    {"offset": {"line": 862, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/critical-incidents/CriticalIncidents.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, VStack, Text, Badge, HStack, Spinner, Alert, AlertIcon } from '@chakra-ui/react'\nimport { fetchIncidents, selectIncidents } from '../incidents/incidentsSlice'\nimport { selectSeverityLevels } from '../severity-levels/severityLevelsSlice'\nimport { selectESGCategories } from '../esg-categories/esgCategoriesSlice'\nimport type { CompanyRiskOverview } from '@/types/company-risk-overview'\nimport { fetchCompanyRiskOverview } from '@/lib/company-risk-overview'\nimport { AppDispatch } from '../../store'\nimport type { ESGCategory } from '../esg-categories/esgCategoriesSlice'\n\nconst CriticalIncidents = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { data: incidentsData, loading: incidentsLoading, error: incidentsError } = useSelector(selectIncidents)\n  const { data: severityLevelsData } = useSelector(selectSeverityLevels)\n  const { data: esgCategoriesData } = useSelector(selectESGCategories)\n  const [companyRiskOverviewData, setCompanyRiskOverviewData] = useState<CompanyRiskOverview | null>(null)\n  const [companyRiskLoading, setCompanyRiskLoading] = useState(false)\n  const [companyRiskError, setCompanyRiskError] = useState<string | null>(null)\n\n  useEffect(() => {\n    dispatch(fetchIncidents())\n    loadCompanyRiskOverview()\n  }, [dispatch])\n\n  const loadCompanyRiskOverview = async () => {\n    try {\n      setCompanyRiskLoading(true)\n      const data = await fetchCompanyRiskOverview()\n      setCompanyRiskOverviewData(data)\n    } catch (error) {\n      setCompanyRiskError(error instanceof Error ? error.message : 'Failed to fetch company risk overview data')\n    } finally {\n      setCompanyRiskLoading(false)\n    }\n  }\n\n  const getSeverityColor = (severity: string) => {\n    const level = severityLevelsData?.severityLevels.find(\n      level => level.id.toLowerCase() === severity.toLowerCase()\n    )\n    return level?.color || '#FBC02D' // default to low severity color if not found\n  }\n\n  const getCategoryColor = (category: string) => {\n    const esgCategory = esgCategoriesData?.categories.find(\n      (cat: ESGCategory) => cat.id.toLowerCase() === category.toLowerCase()\n    )\n    return esgCategory?.color || '#9C27B0' // default to governance color if not found\n  }\n\n  const getCategoryName = (categoryId: string) => {\n    const esgCategory = esgCategoriesData?.categories.find(\n      (cat: ESGCategory) => cat.id.toLowerCase() === categoryId.toLowerCase()\n    )\n    return esgCategory?.name || categoryId\n  }\n\n  const getSubcategoryName = (categoryId: string, subcategoryId: string) => {\n    const esgCategory = esgCategoriesData?.categories.find(\n      (cat: ESGCategory) => cat.id.toLowerCase() === categoryId.toLowerCase()\n    )\n    const subcategory = esgCategory?.subcategories.find(\n      (sub) => sub.id.toLowerCase() === subcategoryId.toLowerCase()\n    )\n    return subcategory?.name || subcategoryId\n  }\n\n  if (incidentsLoading || companyRiskLoading) {\n    return (\n      <Box p={4} textAlign=\"center\">\n        <Spinner />\n      </Box>\n    )\n  }\n\n  if (incidentsError || companyRiskError) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        {incidentsError || companyRiskError}\n      </Alert>\n    )\n  }\n\n  const lastUpdated = companyRiskOverviewData?.lastUpdated\n    ? new Date(companyRiskOverviewData.lastUpdated)\n    : new Date()\n  const sixtyDaysAgo = new Date(lastUpdated)\n  sixtyDaysAgo.setDate(sixtyDaysAgo.getDate() - 60)\n\n  const criticalIncidents = incidentsData?.incidents\n    ?.filter(incident => {\n      const incidentDate = new Date(incident.date)\n      const isRecent = incidentDate >= sixtyDaysAgo\n      const isHighSeverity = ['high', 'critical'].includes(incident.severity.toLowerCase())\n      return isRecent && isHighSeverity\n    })\n    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())\n\n  if (!criticalIncidents || criticalIncidents.length === 0) {\n    return (\n      <Box p={4}>\n        <Text>No critical incidents found in the last 60 days</Text>\n      </Box>\n    )\n  }\n\n  return (\n    <Box p={4}>\n      <VStack spacing={4} align=\"stretch\">\n        <HStack justify=\"space-between\">\n          <Text fontSize=\"lg\" fontWeight=\"bold\">\n            Critical Incidents (Last 60 Days)\n          </Text>\n          <Text fontSize=\"sm\" color=\"gray.500\">\n            Last Updated: {lastUpdated.toLocaleDateString()}\n          </Text>\n        </HStack>\n        {criticalIncidents.map((incident) => (\n          <Box\n            key={incident.id}\n            p={4}\n            borderWidth=\"1px\"\n            borderRadius=\"lg\"\n            borderColor={getCategoryColor(incident.category)}\n            borderLeftWidth=\"4px\"\n            display=\"flex\"\n            gap={4}\n          >\n            <Box\n              p={3}\n              bg=\"red.50\"\n              borderRadius=\"md\"\n              minW=\"120px\"\n              display=\"flex\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n              minH={`${Math.min(100, Math.max(20, incident.riskScoreImpact.overall * 2))}px`}\n            >\n              <VStack spacing={0}>\n                <Text fontSize=\"lg\" fontWeight=\"bold\" color=\"red.700\">\n                  {incident.riskScoreImpact.overall}\n                </Text>\n              </VStack>\n            </Box>\n            <VStack align=\"stretch\" spacing={2} flex={1}>\n              <HStack justify=\"space-between\">\n                <Text fontWeight=\"bold\">{incident.title}</Text>\n                <Badge\n                  bg={getSeverityColor(incident.severity)}\n                  color=\"white\"\n                >\n                  {incident.severity}\n                </Badge>\n              </HStack>\n              <Text fontSize=\"sm\" color=\"gray.500\">\n                {new Date(incident.date).toLocaleDateString()}\n              </Text>\n              <Text>{incident.description}</Text>\n              <Text fontSize=\"sm\">\n                <strong>Detailed Description:</strong> {incident.detailedDescription}\n              </Text>\n              <Text fontSize=\"sm\">\n                <strong>Location:</strong> {incident.location}\n              </Text>\n              <Text fontSize=\"sm\">\n                <strong>Category:</strong> {getCategoryName(incident.category)}\n              </Text>\n              <Text fontSize=\"sm\">\n                <strong>Subcategory:</strong> {getSubcategoryName(incident.category, incident.subcategory)}\n              </Text>\n              <Box>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" mb={1}>Risk Score Impact:</Text>\n                <HStack spacing={4}>\n                  <Text fontSize=\"sm\">\n                    <strong>Overall:</strong> {incident.riskScoreImpact.overall}\n                  </Text>\n                  <Text fontSize=\"sm\">\n                    <strong>Environmental:</strong> {incident.riskScoreImpact.environmental}\n                  </Text>\n                  <Text fontSize=\"sm\">\n                    <strong>Social:</strong> {incident.riskScoreImpact.social}\n                  </Text>\n                  <Text fontSize=\"sm\">\n                    <strong>Governance:</strong> {incident.riskScoreImpact.governance}\n                  </Text>\n                </HStack>\n              </Box>\n              <Box>\n                <Text fontSize=\"sm\" fontWeight=\"bold\" mb={1}>Sources:</Text>\n                <VStack align=\"start\" spacing={1}>\n                  {incident.sources.map((source, index) => (\n                    <Text key={index} fontSize=\"sm\">\n                      <a\n                        href={source.url}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        style={{ color: '#3182CE', textDecoration: 'underline' }}\n                      >\n                        {source.title}\n                      </a>\n                      {' '}({new Date(source.publishDate).toLocaleDateString()})\n                    </Text>\n                  ))}\n                </VStack>\n              </Box>\n            </VStack>\n          </Box>\n        ))}\n      </VStack>\n    </Box>\n  )\n}\n\nexport default CriticalIncidents "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1389, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/esg-categories/ESGCategories.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, VStack, Text, HStack, Spinner, Alert, AlertIcon, Badge } from '@chakra-ui/react'\nimport { fetchESGCategories, selectESGCategories } from './esgCategoriesSlice'\nimport { AppDispatch } from '../../store'\n\nconst ESGCategories = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { data, loading, error } = useSelector(selectESGCategories)\n\n  useEffect(() => {\n    dispatch(fetchESGCategories())\n  }, [dispatch])\n\n  if (loading) {\n    return (\n      <Box p={4} textAlign=\"center\">\n        <Spinner />\n      </Box>\n    )\n  }\n\n  if (error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert>\n    )\n  }\n\n  if (!data?.categories || data.categories.length === 0) {\n    return (\n      <Box p={4}>\n        <Text>No ESG categories found</Text>\n      </Box>\n    )\n  }\n\n  return (\n    <Box p={4}>\n      <VStack spacing={4} align=\"stretch\">\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\n          ESG Categories\n        </Text>\n        {data.categories.map((category) => (\n          <Box\n            key={category.id}\n            p={4}\n            borderWidth=\"1px\"\n            borderRadius=\"lg\"\n            borderColor=\"gray.200\"\n          >\n            <VStack align=\"stretch\" spacing={2}>\n              <HStack>\n                <Text fontWeight=\"bold\">{category.name}</Text>\n                <Badge colorScheme={category.color}>\n                  {category.id}\n                </Badge>\n              </HStack>\n              <Text fontSize=\"sm\" color=\"gray.600\">\n                {category.description}\n              </Text>\n              <Box>\n                <Text fontSize=\"sm\" fontWeight=\"bold\">Subcategories:</Text>\n                <HStack spacing={2} wrap=\"wrap\">\n                  {category.subcategories.map((subcategory) => (\n                    <Badge key={subcategory.id} colorScheme=\"gray\">\n                      {subcategory.name}\n                    </Badge>\n                  ))}\n                </HStack>\n              </Box>\n            </VStack>\n          </Box>\n        ))}\n      </VStack>\n    </Box>\n  )\n}\n\nexport default ESGCategories "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AALA;;;;;AAQA,MAAM,gBAAgB;;IACpB,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD,EAAE,+JAAA,CAAA,sBAAmB;IAEhE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,SAAS,CAAA,GAAA,+JAAA,CAAA,qBAAkB,AAAD;QAC5B;kCAAG;QAAC;KAAS;IAEb,IAAI,SAAS;QACX,qBACE,6LAAC,wKAAA,CAAA,MAAG;YAAC,GAAG;YAAG,WAAU;sBACnB,cAAA,6LAAC,gLAAA,CAAA,UAAO;;;;;;;;;;IAGd;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC,4KAAA,CAAA,QAAK;YAAC,QAAO;;8BACZ,6LAAC,oLAAA,CAAA,YAAS;;;;;gBACT;;;;;;;IAGP;IAEA,IAAI,CAAC,MAAM,cAAc,KAAK,UAAU,CAAC,MAAM,KAAK,GAAG;QACrD,qBACE,6LAAC,wKAAA,CAAA,MAAG;YAAC,GAAG;sBACN,cAAA,6LAAC,gLAAA,CAAA,OAAI;0BAAC;;;;;;;;;;;IAGZ;IAEA,qBACE,6LAAC,wKAAA,CAAA,MAAG;QAAC,GAAG;kBACN,cAAA,6LAAC,iLAAA,CAAA,SAAM;YAAC,SAAS;YAAG,OAAM;;8BACxB,6LAAC,gLAAA,CAAA,OAAI;oBAAC,UAAS;oBAAK,YAAW;8BAAO;;;;;;gBAGrC,KAAK,UAAU,CAAC,GAAG,CAAC,CAAC,yBACpB,6LAAC,wKAAA,CAAA,MAAG;wBAEF,GAAG;wBACH,aAAY;wBACZ,cAAa;wBACb,aAAY;kCAEZ,cAAA,6LAAC,iLAAA,CAAA,SAAM;4BAAC,OAAM;4BAAU,SAAS;;8CAC/B,6LAAC,iLAAA,CAAA,SAAM;;sDACL,6LAAC,gLAAA,CAAA,OAAI;4CAAC,YAAW;sDAAQ,SAAS,IAAI;;;;;;sDACtC,6LAAC,4KAAA,CAAA,QAAK;4CAAC,aAAa,SAAS,KAAK;sDAC/B,SAAS,EAAE;;;;;;;;;;;;8CAGhB,6LAAC,gLAAA,CAAA,OAAI;oCAAC,UAAS;oCAAK,OAAM;8CACvB,SAAS,WAAW;;;;;;8CAEvB,6LAAC,wKAAA,CAAA,MAAG;;sDACF,6LAAC,gLAAA,CAAA,OAAI;4CAAC,UAAS;4CAAK,YAAW;sDAAO;;;;;;sDACtC,6LAAC,iLAAA,CAAA,SAAM;4CAAC,SAAS;4CAAG,MAAK;sDACtB,SAAS,aAAa,CAAC,GAAG,CAAC,CAAC,4BAC3B,6LAAC,4KAAA,CAAA,QAAK;oDAAsB,aAAY;8DACrC,YAAY,IAAI;mDADP,YAAY,EAAE;;;;;;;;;;;;;;;;;;;;;;uBApB7B,SAAS,EAAE;;;;;;;;;;;;;;;;AAgC5B;GAzEM;;QACa,4JAAA,CAAA,cAAW;QACK,4JAAA,CAAA,cAAW;;;KAFxC;uCA2ES","debugId":null}},
    {"offset": {"line": 1602, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/severity-levels/SeverityLevels.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Box, VStack, Text, HStack, Spinner, Alert, AlertIcon, Badge } from '@chakra-ui/react'\nimport { fetchSeverityLevels, selectSeverityLevels } from './severityLevelsSlice'\nimport { AppDispatch } from '../../store'\n\nconst SeverityLevels = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { data, loading, error } = useSelector(selectSeverityLevels)\n\n  useEffect(() => {\n    dispatch(fetchSeverityLevels())\n  }, [dispatch])\n\n  if (loading) {\n    return (\n      <Box p={4} textAlign=\"center\">\n        <Spinner />\n      </Box>\n    )\n  }\n\n  if (error) {\n    return (\n      <Alert status=\"error\">\n        <AlertIcon />\n        {error}\n      </Alert>\n    )\n  }\n\n  if (!data?.severityLevels || data.severityLevels.length === 0) {\n    return (\n      <Box p={4}>\n        <Text>No severity levels found</Text>\n      </Box>\n    )\n  }\n\n  return (\n    <Box p={4}>\n      <VStack spacing={4} align=\"stretch\">\n        <Text fontSize=\"lg\" fontWeight=\"bold\">\n          Severity Levels\n        </Text>\n        {data.severityLevels.map((level) => (\n          <Box\n            key={level.id}\n            p={4}\n            borderWidth=\"1px\"\n            borderRadius=\"lg\"\n            borderColor=\"gray.200\"\n          >\n            <VStack align=\"stretch\" spacing={2}>\n              <HStack>\n                <Text fontWeight=\"bold\">{level.name}</Text>\n                <Badge colorScheme={level.color}>\n                  {level.id}\n                </Badge>\n              </HStack>\n              <Text fontSize=\"sm\" color=\"gray.600\">\n                {level.description}\n              </Text>\n            </VStack>\n          </Box>\n        ))}\n      </VStack>\n    </Box>\n  )\n}\n\nexport default SeverityLevels "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AALA;;;;;AAQA,MAAM,iBAAiB;;IACrB,MAAM,WAAW,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAD,EAAE,iKAAA,CAAA,uBAAoB;IAEjE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,SAAS,CAAA,GAAA,iKAAA,CAAA,sBAAmB,AAAD;QAC7B;mCAAG;QAAC;KAAS;IAEb,IAAI,SAAS;QACX,qBACE,6LAAC,wKAAA,CAAA,MAAG;YAAC,GAAG;YAAG,WAAU;sBACnB,cAAA,6LAAC,gLAAA,CAAA,UAAO;;;;;;;;;;IAGd;IAEA,IAAI,OAAO;QACT,qBACE,6LAAC,4KAAA,CAAA,QAAK;YAAC,QAAO;;8BACZ,6LAAC,oLAAA,CAAA,YAAS;;;;;gBACT;;;;;;;IAGP;IAEA,IAAI,CAAC,MAAM,kBAAkB,KAAK,cAAc,CAAC,MAAM,KAAK,GAAG;QAC7D,qBACE,6LAAC,wKAAA,CAAA,MAAG;YAAC,GAAG;sBACN,cAAA,6LAAC,gLAAA,CAAA,OAAI;0BAAC;;;;;;;;;;;IAGZ;IAEA,qBACE,6LAAC,wKAAA,CAAA,MAAG;QAAC,GAAG;kBACN,cAAA,6LAAC,iLAAA,CAAA,SAAM;YAAC,SAAS;YAAG,OAAM;;8BACxB,6LAAC,gLAAA,CAAA,OAAI;oBAAC,UAAS;oBAAK,YAAW;8BAAO;;;;;;gBAGrC,KAAK,cAAc,CAAC,GAAG,CAAC,CAAC,sBACxB,6LAAC,wKAAA,CAAA,MAAG;wBAEF,GAAG;wBACH,aAAY;wBACZ,cAAa;wBACb,aAAY;kCAEZ,cAAA,6LAAC,iLAAA,CAAA,SAAM;4BAAC,OAAM;4BAAU,SAAS;;8CAC/B,6LAAC,iLAAA,CAAA,SAAM;;sDACL,6LAAC,gLAAA,CAAA,OAAI;4CAAC,YAAW;sDAAQ,MAAM,IAAI;;;;;;sDACnC,6LAAC,4KAAA,CAAA,QAAK;4CAAC,aAAa,MAAM,KAAK;sDAC5B,MAAM,EAAE;;;;;;;;;;;;8CAGb,6LAAC,gLAAA,CAAA,OAAI;oCAAC,UAAS;oCAAK,OAAM;8CACvB,MAAM,WAAW;;;;;;;;;;;;uBAdjB,MAAM,EAAE;;;;;;;;;;;;;;;;AAsBzB;GA/DM;;QACa,4JAAA,CAAA,cAAW;QACK,4JAAA,CAAA,cAAW;;;KAFxC;uCAiES","debugId":null}}]
}