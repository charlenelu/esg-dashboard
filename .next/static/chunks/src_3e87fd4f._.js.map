{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/counter/counterSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\ninterface CounterState {\n  value: number\n}\n\nconst initialState: CounterState = {\n  value: 0,\n}\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment: (state) => {\n      state.value += 1\n    },\n    decrement: (state) => {\n      state.value -= 1\n    },\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload\n    },\n  },\n})\n\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions\nexport default counterSlice.reducer "],"names":[],"mappings":";;;;;;;AAAA;;AAMA,MAAM,eAA6B;IACjC,OAAO;AACT;AAEO,MAAM,eAAe,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACtC,MAAM;IACN;IACA,UAAU;QACR,WAAW,CAAC;YACV,MAAM,KAAK,IAAI;QACjB;QACA,WAAW,CAAC;YACV,MAAM,KAAK,IAAI;QACjB;QACA,mBAAmB,CAAC,OAAO;YACzB,MAAM,KAAK,IAAI,OAAO,OAAO;QAC/B;IACF;AACF;AAEO,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,iBAAiB,EAAE,GAAG,aAAa,OAAO;uCAChE,aAAa,OAAO","debugId":null}},
    {"offset": {"line": 45, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/services/service.ts"],"sourcesContent":["export const getCompanyRiskOverview = async () => {\n    const response = await import('./origin-data/company-risk-overview.json');\n    return response;\n};\n\nexport const getRiskScoreHistory = async () => {\n    const response = await import('./origin-data/risk-score-history.json');\n    return response;\n};\n\nexport const getCriticalIncidents = async () => {\n    const response = await import('./origin-data/critical-incidents.json');\n    return response;\n};\n\nexport const getESGCategories = async () => {\n    const response = await import('./origin-data/esg-categories.json');\n    return response;\n};\n\nexport const getSeverityLevels = async () => {\n    const response = await import('./origin-data/severity-levels.json');\n    return response;\n};\n\nexport const getIncidents = async () => {\n    const response = await import('./origin-data/incidents.json');\n    return response;\n};"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,yBAAyB;IAClC,MAAM,WAAW;IACjB,OAAO;AACX;AAEO,MAAM,sBAAsB;IAC/B,MAAM,WAAW;IACjB,OAAO;AACX;AAEO,MAAM,uBAAuB;IAChC,MAAM,WAAW;IACjB,OAAO;AACX;AAEO,MAAM,mBAAmB;IAC5B,MAAM,WAAW;IACjB,OAAO;AACX;AAEO,MAAM,oBAAoB;IAC7B,MAAM,WAAW;IACjB,OAAO;AACX;AAEO,MAAM,eAAe;IACxB,MAAM,WAAW;IACjB,OAAO;AACX","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/risk-score-history/riskScoreHistorySlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { RootState } from '../../store'\nimport { getRiskScoreHistory } from '../../services/service'\n\ninterface RiskScoreData {\n  date: string\n  overall: number\n  environmental: number\n  social: number\n  governance: number\n}\n\ninterface RiskScoreHistory {\n  companyId: string\n  companyName: string\n  interval: string\n  data: RiskScoreData[]\n}\n\ninterface RiskScoreHistoryState {\n  data: RiskScoreHistory | null\n  loading: boolean\n  error: string | null\n}\n\nconst initialState: RiskScoreHistoryState = {\n  data: null,\n  loading: false,\n  error: null\n}\n\nexport const fetchRiskScoreHistory = createAsyncThunk(\n  'riskScoreHistory/fetchRiskScoreHistory',\n  async () => {\n    try {\n      const response = await getRiskScoreHistory()\n      return response.default\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'Failed to fetch risk score history data')\n    }\n  }\n)\n\nconst riskScoreHistorySlice = createSlice({\n  name: 'riskScoreHistory',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchRiskScoreHistory.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(fetchRiskScoreHistory.fulfilled, (state, action) => {\n        state.loading = false\n        state.data = action.payload\n      })\n      .addCase(fetchRiskScoreHistory.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.error.message || 'Failed to fetch risk score history data'\n      })\n  }\n})\n\nexport const selectRiskScoreHistory = (state: RootState) => state.riskScoreHistory\n\nexport default riskScoreHistorySlice.reducer "],"names":[],"mappings":";;;;;AAAA;AAEA;;;AAuBA,MAAM,eAAsC;IAC1C,MAAM;IACN,SAAS;IACT,OAAO;AACT;AAEO,MAAM,wBAAwB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAClD,0CACA;IACE,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,6HAAA,CAAA,sBAAmB,AAAD;QACzC,OAAO,SAAS,OAAO;IACzB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,MAAM,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAC3D;AACF;AAGF,MAAM,wBAAwB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACxC,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,sBAAsB,OAAO,EAAE,CAAC;YACvC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,sBAAsB,SAAS,EAAE,CAAC,OAAO;YAChD,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B,GACC,OAAO,CAAC,sBAAsB,QAAQ,EAAE,CAAC,OAAO;YAC/C,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC;IACJ;AACF;AAEO,MAAM,yBAAyB,CAAC,QAAqB,MAAM,gBAAgB;uCAEnE,sBAAsB,OAAO","debugId":null}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/incidents/incidentsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { RootState } from '../../store'\nimport { getIncidents } from '../../services/service'\n\ninterface RiskScoreImpact {\n  overall: number\n  environmental: number\n  social: number\n  governance: number\n}\n\ninterface Source {\n  title: string\n  url: string\n  publishDate: string\n}\n\ninterface Incident {\n  id: string\n  title: string\n  date: string\n  category: string\n  subcategory: string\n  severity: string\n  description: string\n  detailedDescription: string\n  location: string\n  riskScoreImpact: RiskScoreImpact\n  sources: Source[]\n}\n\ninterface Incidents {\n  companyId: string\n  companyName: string\n  total: number\n  incidents: Incident[]\n}\n\ninterface IncidentsState {\n  data: Incidents | null\n  loading: boolean\n  error: string | null\n}\n\nconst initialState: IncidentsState = {\n  data: null,\n  loading: false,\n  error: null\n}\n\nexport const fetchIncidents = createAsyncThunk(\n  'incidents/fetchIncidents',\n  async () => {\n    try {\n      const response = await getIncidents()\n      return response.default\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'Failed to fetch incidents data')\n    }\n  }\n)\n\nconst incidentsSlice = createSlice({\n  name: 'incidents',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchIncidents.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(fetchIncidents.fulfilled, (state, action) => {\n        state.loading = false\n        state.data = action.payload\n      })\n      .addCase(fetchIncidents.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.error.message || 'Failed to fetch incidents data'\n      })\n  }\n})\n\nexport const selectIncidents = (state: RootState) => state.incidents\n\nexport default incidentsSlice.reducer "],"names":[],"mappings":";;;;;AAAA;AAEA;;;AA0CA,MAAM,eAA+B;IACnC,MAAM;IACN,SAAS;IACT,OAAO;AACT;AAEO,MAAM,iBAAiB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAC3C,4BACA;IACE,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,6HAAA,CAAA,eAAY,AAAD;QAClC,OAAO,SAAS,OAAO;IACzB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,MAAM,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAC3D;AACF;AAGF,MAAM,iBAAiB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACjC,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,eAAe,OAAO,EAAE,CAAC;YAChC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,eAAe,SAAS,EAAE,CAAC,OAAO;YACzC,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B,GACC,OAAO,CAAC,eAAe,QAAQ,EAAE,CAAC,OAAO;YACxC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC;IACJ;AACF;AAEO,MAAM,kBAAkB,CAAC,QAAqB,MAAM,SAAS;uCAErD,eAAe,OAAO","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/esg-categories/esgCategoriesSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { RootState } from '../../store'\nimport { getESGCategories } from '../../services/service'\n\ninterface Subcategory {\n  id: string\n  name: string\n}\n\nexport interface ESGCategory {\n  id: string\n  name: string\n  description: string\n  color: string\n  subcategories: Subcategory[]\n}\n\ninterface ESGCategories {\n  categories: ESGCategory[]\n}\n\ninterface ESGCategoriesState {\n  data: ESGCategories | null\n  loading: boolean\n  error: string | null\n}\n\nconst initialState: ESGCategoriesState = {\n  data: null,\n  loading: false,\n  error: null\n}\n\nexport const fetchESGCategories = createAsyncThunk(\n  'esgCategories/fetchESGCategories',\n  async () => {\n    try {\n      const response = await getESGCategories()\n      return response.default\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'Failed to fetch ESG categories data')\n    }\n  }\n)\n\nconst esgCategoriesSlice = createSlice({\n  name: 'esgCategories',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchESGCategories.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(fetchESGCategories.fulfilled, (state, action) => {\n        state.loading = false\n        state.data = action.payload\n      })\n      .addCase(fetchESGCategories.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.error.message || 'Failed to fetch ESG categories data'\n      })\n  }\n})\n\nexport const selectESGCategories = (state: RootState) => state.esgCategories\n\nexport default esgCategoriesSlice.reducer "],"names":[],"mappings":";;;;;AAAA;AAEA;;;AAyBA,MAAM,eAAmC;IACvC,MAAM;IACN,SAAS;IACT,OAAO;AACT;AAEO,MAAM,qBAAqB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAC/C,oCACA;IACE,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,6HAAA,CAAA,mBAAgB,AAAD;QACtC,OAAO,SAAS,OAAO;IACzB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,MAAM,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAC3D;AACF;AAGF,MAAM,qBAAqB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACrC,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,mBAAmB,OAAO,EAAE,CAAC;YACpC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,mBAAmB,SAAS,EAAE,CAAC,OAAO;YAC7C,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B,GACC,OAAO,CAAC,mBAAmB,QAAQ,EAAE,CAAC,OAAO;YAC5C,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC;IACJ;AACF;AAEO,MAAM,sBAAsB,CAAC,QAAqB,MAAM,aAAa;uCAE7D,mBAAmB,OAAO","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/critical-incidents/criticalIncidentsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { RootState } from '../../store'\nimport { getCriticalIncidents } from '../../services/service'\n\ninterface CriticalIncident {\n  id: string\n  title: string\n  date: string\n  category: string\n  severity: string\n  description: string\n  location: string\n  riskScoreImpact: number\n  summary: string\n}\n\ninterface CriticalIncidents {\n  companyId: string\n  companyName: string\n  criticalIncidents: CriticalIncident[]\n}\n\ninterface CriticalIncidentsState {\n  data: CriticalIncidents | null\n  loading: boolean\n  error: string | null\n}\n\nconst initialState: CriticalIncidentsState = {\n  data: null,\n  loading: false,\n  error: null\n}\n\nexport const fetchCriticalIncidents = createAsyncThunk(\n  'criticalIncidents/fetchCriticalIncidents',\n  async () => {\n    try {\n      const response = await getCriticalIncidents()\n      return response.default\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'Failed to fetch critical incidents data')\n    }\n  }\n)\n\nconst criticalIncidentsSlice = createSlice({\n  name: 'criticalIncidents',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchCriticalIncidents.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(fetchCriticalIncidents.fulfilled, (state, action) => {\n        state.loading = false\n        state.data = action.payload\n      })\n      .addCase(fetchCriticalIncidents.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.error.message || 'Failed to fetch critical incidents data'\n      })\n  }\n})\n\nexport const selectCriticalIncidents = (state: RootState) => state.criticalIncidents\n\nexport default criticalIncidentsSlice.reducer "],"names":[],"mappings":";;;;;AAAA;AAEA;;;AA0BA,MAAM,eAAuC;IAC3C,MAAM;IACN,SAAS;IACT,OAAO;AACT;AAEO,MAAM,yBAAyB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EACnD,4CACA;IACE,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,6HAAA,CAAA,uBAAoB,AAAD;QAC1C,OAAO,SAAS,OAAO;IACzB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,MAAM,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAC3D;AACF;AAGF,MAAM,yBAAyB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACzC,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,uBAAuB,OAAO,EAAE,CAAC;YACxC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,uBAAuB,SAAS,EAAE,CAAC,OAAO;YACjD,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B,GACC,OAAO,CAAC,uBAAuB,QAAQ,EAAE,CAAC,OAAO;YAChD,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC;IACJ;AACF;AAEO,MAAM,0BAA0B,CAAC,QAAqB,MAAM,iBAAiB;uCAErE,uBAAuB,OAAO","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/components/severity-levels/severityLevelsSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\nimport { RootState } from '../../store'\nimport { getSeverityLevels } from '../../services/service'\n\ninterface SeverityLevel {\n  id: string\n  name: string\n  description: string\n  color: string\n}\n\ninterface SeverityLevels {\n  severityLevels: SeverityLevel[]\n}\n\ninterface SeverityLevelsState {\n  data: SeverityLevels | null\n  loading: boolean\n  error: string | null\n}\n\nconst initialState: SeverityLevelsState = {\n  data: null,\n  loading: false,\n  error: null\n}\n\nexport const fetchSeverityLevels = createAsyncThunk(\n  'severityLevels/fetchSeverityLevels',\n  async () => {\n    try {\n      const response = await getSeverityLevels()\n      return response.default\n    } catch (error) {\n      throw new Error(error instanceof Error ? error.message : 'Failed to fetch severity levels data')\n    }\n  }\n)\n\nconst severityLevelsSlice = createSlice({\n  name: 'severityLevels',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchSeverityLevels.pending, (state) => {\n        state.loading = true\n        state.error = null\n      })\n      .addCase(fetchSeverityLevels.fulfilled, (state, action) => {\n        state.loading = false\n        state.data = action.payload\n      })\n      .addCase(fetchSeverityLevels.rejected, (state, action) => {\n        state.loading = false\n        state.error = action.error.message || 'Failed to fetch severity levels data'\n      })\n  }\n})\n\nexport const selectSeverityLevels = (state: RootState) => state.severityLevels\n\nexport default severityLevelsSlice.reducer "],"names":[],"mappings":";;;;;AAAA;AAEA;;;AAmBA,MAAM,eAAoC;IACxC,MAAM;IACN,SAAS;IACT,OAAO;AACT;AAEO,MAAM,sBAAsB,CAAA,GAAA,8LAAA,CAAA,mBAAgB,AAAD,EAChD,sCACA;IACE,IAAI;QACF,MAAM,WAAW,MAAM,CAAA,GAAA,6HAAA,CAAA,oBAAiB,AAAD;QACvC,OAAO,SAAS,OAAO;IACzB,EAAE,OAAO,OAAO;QACd,MAAM,IAAI,MAAM,iBAAiB,QAAQ,MAAM,OAAO,GAAG;IAC3D;AACF;AAGF,MAAM,sBAAsB,CAAA,GAAA,8LAAA,CAAA,cAAW,AAAD,EAAE;IACtC,MAAM;IACN;IACA,UAAU,CAAC;IACX,eAAe,CAAC;QACd,QACG,OAAO,CAAC,oBAAoB,OAAO,EAAE,CAAC;YACrC,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG;QAChB,GACC,OAAO,CAAC,oBAAoB,SAAS,EAAE,CAAC,OAAO;YAC9C,MAAM,OAAO,GAAG;YAChB,MAAM,IAAI,GAAG,OAAO,OAAO;QAC7B,GACC,OAAO,CAAC,oBAAoB,QAAQ,EAAE,CAAC,OAAO;YAC7C,MAAM,OAAO,GAAG;YAChB,MAAM,KAAK,GAAG,OAAO,KAAK,CAAC,OAAO,IAAI;QACxC;IACJ;AACF;AAEO,MAAM,uBAAuB,CAAC,QAAqB,MAAM,cAAc;uCAE/D,oBAAoB,OAAO","debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit'\nimport counterReducer from '@/components/counter/counterSlice'\nimport riskScoreHistoryReducer from '@/components/risk-score-history/riskScoreHistorySlice'\nimport incidentsReducer from '@/components/incidents/incidentsSlice'\nimport esgCategoriesReducer from '@/components/esg-categories/esgCategoriesSlice'\nimport criticalIncidentsReducer from '@/components/critical-incidents/criticalIncidentsSlice'\nimport severityLevelsReducer from '@/components/severity-levels/severityLevelsSlice'\n\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer,\n    riskScoreHistory: riskScoreHistoryReducer,\n    incidents: incidentsReducer,\n    esgCategories: esgCategoriesReducer,\n    criticalIncidents: criticalIncidentsReducer,\n    severityLevels: severityLevelsReducer\n  }\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch "],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAEO,MAAM,QAAQ,CAAA,GAAA,8LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,SAAS,+IAAA,CAAA,UAAc;QACvB,kBAAkB,yKAAA,CAAA,UAAuB;QACzC,WAAW,mJAAA,CAAA,UAAgB;QAC3B,eAAe,+JAAA,CAAA,UAAoB;QACnC,mBAAmB,uKAAA,CAAA,UAAwB;QAC3C,gBAAgB,iKAAA,CAAA,UAAqB;IACvC;AACF","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/app/%28dashboard%29/providers.tsx"],"sourcesContent":["'use client'\n\nimport { Provider } from 'react-redux'\nimport { store } from '@/store'\nimport { ChakraProvider } from '@chakra-ui/react'\n\nexport function Providers({ children }: { children: React.ReactNode }) {\n  return (\n    <Provider store={store}>\n      <ChakraProvider>\n        {children}\n      </ChakraProvider>\n    </Provider>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,SAAS,UAAU,EAAE,QAAQ,EAAiC;IACnE,qBACE,6LAAC,4JAAA,CAAA,WAAQ;QAAC,OAAO,wHAAA,CAAA,QAAK;kBACpB,cAAA,6LAAC,gLAAA,CAAA,iBAAc;sBACZ;;;;;;;;;;;AAIT;KARgB","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["file:///Users/lululu/RemoteWork/esg-dashboard/src/app/%28dashboard%29/layout.tsx"],"sourcesContent":["'use client'\n\nimport { Providers } from './providers'\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode\n}) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <Providers>\n          {children}\n        </Providers>\n      </body>\n    </html>\n  )\n} "],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,6LAAC;QAAK,MAAK;kBACT,cAAA,6LAAC;sBACC,cAAA,6LAAC,4IAAA,CAAA,YAAS;0BACP;;;;;;;;;;;;;;;;AAKX;KAdwB","debugId":null}}]
}